{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghyeju/Documents/\\u1109\\u1165\\u11BC\\u1109\\u1175\\u11AB\\u110B\\u1167\\u1103\\u1162/\\u1100\\u1175\\u1110\\u1161/\\u1105\\u116E\\u11B7\\u1107\\u1175\\u1102\\u1166\\u110B\\u1175\\u1109\\u1167\\u11AB/code/roombi-amplify-dev-2/src/App.js\";\nimport { Amplify, Auth } from 'aws-amplify';\nimport * as React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\nimport { I18n } from 'aws-amplify';\nimport { translations } from '@aws-amplify/ui-react';\nimport awsconfig from './awsconfig';\nimport Home from './pages/Home';\nimport Result from './pages/Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nI18n.putVocabularies(translations);\nI18n.setLanguage('ko');\nI18n.putVocabularies({\n  ko: {\n    'Enter your Username': '아이디 입력',\n    'Enter your Password': \"비밀번호 입력\",\n    'Please confirm your Password': \"비밀번호 재입력\"\n  }\n});\nAmplify.configure(awsconfig);\nexport default function App() {\n  // 현재 유저의 정보\n  const userinfo = Auth.currentUserInfo();\n  return (\n    /*#__PURE__*/\n    // authenticator로 감싸서 인증 정보가 없으면 안에 내용에 접근을 못하게끔\n    _jsxDEV(Authenticator, {\n      signUpAttributes: ['email'],\n      variation: \"modal\",\n      children: ({\n        signOut,\n        user\n      }) =>\n      /*#__PURE__*/\n      //여기서부턴 navigator같이 url에 따라서 어디로 갈지 배분해주는거임\n      _jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/result\",\n            element: /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Amplify","Auth","React","BrowserRouter","Route","Routes","Authenticator","I18n","translations","awsconfig","Home","Result","jsxDEV","_jsxDEV","putVocabularies","setLanguage","ko","configure","App","userinfo","currentUserInfo","signUpAttributes","variation","children","signOut","user","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeonghyeju/Documents/성신여대/기타/룸비네이션/code/roombi-amplify-dev-2/src/App.js"],"sourcesContent":["import { Amplify, Auth } from 'aws-amplify';\n\nimport * as React from 'react';\n\nimport {  BrowserRouter, Route, Routes } from 'react-router-dom' \n\nimport { Authenticator } from '@aws-amplify/ui-react';\nimport '@aws-amplify/ui-react/styles.css';\n\nimport { I18n } from 'aws-amplify';\nimport { translations } from '@aws-amplify/ui-react';\n\nimport awsconfig from './awsconfig';\nimport Home from './pages/Home'\nimport Result from './pages/Result'\n\n\nI18n.putVocabularies(translations);\nI18n.setLanguage('ko');\n\nI18n.putVocabularies({\n  ko: {\n    'Enter your Username': '아이디 입력',\n    'Enter your Password': \"비밀번호 입력\",\n    'Please confirm your Password': \"비밀번호 재입력\",\n  }\n});\n\nAmplify.configure(awsconfig);\n\n\nexport default function App() {\n  \n  // 현재 유저의 정보\n  const userinfo = Auth.currentUserInfo()\n\n\n  return (\n\n    // authenticator로 감싸서 인증 정보가 없으면 안에 내용에 접근을 못하게끔\n    <Authenticator signUpAttributes={[\n      'email',\n    ]} variation=\"modal\">\n      {({ signOut, user }) => (\n\n        //여기서부턴 navigator같이 url에 따라서 어디로 갈지 배분해주는거임\n        <BrowserRouter>\n        \n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n\n          <Route path=\"/result\" element={<Result />}/>\n\n        </Routes>\n\n        </BrowserRouter>\n      )}\n    </Authenticator>\n  );\n}"],"mappings":";AAAA,SAASA,OAAO,EAAEC,IAAI,QAAQ,aAAa;AAE3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAAUC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAEhE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,OAAO,kCAAkC;AAEzC,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnCN,IAAI,CAACO,eAAe,CAACN,YAAY,CAAC;AAClCD,IAAI,CAACQ,WAAW,CAAC,IAAI,CAAC;AAEtBR,IAAI,CAACO,eAAe,CAAC;EACnBE,EAAE,EAAE;IACF,qBAAqB,EAAE,QAAQ;IAC/B,qBAAqB,EAAE,SAAS;IAChC,8BAA8B,EAAE;EAClC;AACF,CAAC,CAAC;AAEFhB,OAAO,CAACiB,SAAS,CAACR,SAAS,CAAC;AAG5B,eAAe,SAASS,GAAGA,CAAA,EAAG;EAE5B;EACA,MAAMC,QAAQ,GAAGlB,IAAI,CAACmB,eAAe,CAAC,CAAC;EAGvC;IAAA;IAEE;IACAP,OAAA,CAACP,aAAa;MAACe,gBAAgB,EAAE,CAC/B,OAAO,CACP;MAACC,SAAS,EAAC,OAAO;MAAAC,QAAA,EACjBA,CAAC;QAAEC,OAAO;QAAEC;MAAK,CAAC;MAAA;MAEjB;MACAZ,OAAA,CAACV,aAAa;QAAAoB,QAAA,eAEdV,OAAA,CAACR,MAAM;UAAAkB,QAAA,gBACLV,OAAA,CAACT,KAAK;YAACsB,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEd,OAAA,CAACH,IAAI;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAErClB,OAAA,CAACT,KAAK;YAACsB,IAAI,EAAC,SAAS;YAACC,OAAO,eAAEd,OAAA,CAACF,MAAM;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEM;IAChB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;AAEpB;AAACC,EAAA,GA5BuBd,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}